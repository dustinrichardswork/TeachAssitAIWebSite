{"version":3,"file":"static/js/251.3e23a900.chunk.js","mappings":"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","sources":["components/Skeletons/Shimmer.js","components/Skeletons/SkeletonElement.js","components/Skeletons/SkeletonStory.js","components/Blog/Stories/CardStory.jsx","components/Blog/Stories/NoStories.jsx","components/Blog/Stories/Pagination.jsx","components/Blog/Stories/Stories.jsx"],"sourcesContent":["import React from 'react'\n\nconst Shimmer =() =>  {\n  return (\n    <div className=\"shimmer-wrapper\">\n\n        <div className='shimmer'></div>\n\n    </div>\n  )\n}\n\nexport default Shimmer","import React from 'react'\nimport './Skeleton.css'\nconst SkeletonElement =({type }) =>  {\n  const classes =`skeleton ${type}`\n  \n    return (\n        <div className={classes}></div>\n    \n  )\n}\n\nexport default SkeletonElement","import React from 'react'\nimport Shimmer from './Shimmer';\nimport SkeletonElement from './SkeletonElement'\n\nconst  SkeletonStory =({theme}) =>  {\n\n  const themeClass = theme || \"light\" ; \n  return (\n   \n    <div className={`skeleton-wrapper ${themeClass} `}>\n\n        <div className=\"skeleton-story\">\n            <SkeletonElement type=\"thumbnail\"/>\n            <SkeletonElement type=\"Title\"/>\n            <SkeletonElement type=\"text\"/>\n            <SkeletonElement type=\"text\"/>\n            <SkeletonElement type=\"text\"/>\n        </div>\n        <Shimmer/>\n    </div>\n    \n  )\n}\n\nexport default SkeletonStory","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { backend_resourse } from '../../../util/variables';\n\nconst Story = ({ story }) => {\n\n    const editDate = (createdAt) => {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const d = new Date(createdAt);\n        var datestring = d.getDate() + \" \" + monthNames[d.getMonth()] + \" ,\" + d.getFullYear()\n        return datestring\n    }\n\n    function truncateString(str, limit) {\n        if (str.length > limit) {\n            return str.slice(0, limit) + \"...\";\n        }\n        return str;\n    }\n\n    return (\n\n        <div className=\"story-card\">\n            <Link to={`/blog/${story.slug}`} className=\"story-link\">\n\n                <img className=\" story-image\" src={`${backend_resourse}/storyImages/${story.image}`} alt={story.title} />\n                <div className=\"story-content-wrapper\">\n\n                    <h5 className=\" text-xl md:text-2xl font-bold\">\n\n                        {story.title.length > 76 ? truncateString(story.title, 69) : story.title\n\n                        }\n                    </h5>\n\n\n                    <p className=\"text-lg\" dangerouslySetInnerHTML={{ __html: truncateString(story.content, 73) }}>\n                    </p>\n                    <p className=\"story-createdAt\">{editDate(story.createdAt)}\n                    </p>\n                </div>\n            </Link>\n        </div>\n\n    )\n}\n\nexport default Story;\n","import React from \"react\";\n\nconst NoStories = () => (\n  <div className=\"no-story\">\n    <h2>No Story Found</h2>\n    <p>Please try a different search term</p>\n  </div>\n);\n\nexport default NoStories;","import React from 'react'\nimport './Pagination.css'\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport { TiMinus } from 'react-icons/ti'\n\nconst Pagination = ({ page, pages, changePage }) => {\n    function numberRange(start, end) {\n        return new Array(end - start).fill().map((d, i) => i + start);\n    }\n\n    let middlePagination;\n\n    if (pages <= 5) {\n        middlePagination = [...Array(pages)].map((__, index) => (\n\n            <button\n                key={index + 1}\n                onClick={() => changePage(index + 1)}\n                disabled={page === index + 1}\n            >\n                {index + 1}\n\n            </button>\n\n        ))\n    }\n    else {\n        const startValue = Math.floor((page - 1) / 5) * 5\n\n        middlePagination = (\n            <>\n                {numberRange(startValue, pages).map((__, index) => (\n                    <button\n                        key={startValue + index + 1}\n                        onClick={() => changePage(startValue + index + 1)}\n                        disabled={page === startValue + index + 1}\n                    >\n                        {startValue + index + 1}\n                    </button>\n\n                ))}\n                <button>...</button>\n                <button\n\n                    onClick={() => changePage(pages)} disabled={page === pages}>\n                    {pages}\n                </button>\n            </>\n        );\n\n        if (page > 5) {\n            if (pages - page >= 5) {\n                middlePagination = (\n                    <>\n                        <button onClick={() => changePage(1)}>1</button>\n                        <button>...</button>\n                        <button onClick={() => changePage(startValue)}>{startValue}</button>\n\n                        {numberRange(startValue, pages).map((__, index) => (\n                            <button\n                                key={startValue + index + 1}\n                                onClick={() => changePage(startValue + index + 1)}\n\n                                disabled={page === startValue + index + 1}\n\n                            >\n                                {startValue + index + 1}\n                            </button>\n\n                        ))}\n                        <button>...</button>\n                        <button\n                            onClick={() => changePage(pages)}>\n                            {pages}\n                        </button>\n                    </>\n                )\n            }\n\n            else {\n                let amountLeft = pages - page + 5\n                middlePagination = (\n                    <>\n                        <button onClick={() => changePage(1)}>1</button>\n                        <button>...</button>\n                        <button onClick={() => changePage(startValue)}>{startValue}</button>\n                        {numberRange(amountLeft, pages).map((__, index) => (\n                            <button\n                                key={startValue + index + 1}\n                                onClick={() => changePage(startValue + index + 1)}\n\n                                disabled={page === startValue + index + 1}\n\n                                style={pages < startValue + index + 1 ? { display: \"none\" } : null}\n                            >\n                                {startValue + index + 1}\n                            </button>\n\n                        ))}\n\n                    </>\n                )\n            }\n        }\n\n\n    }\n\n\n\n    return (\n\n        pages > 1 && (\n\n\n            <div className=\"pagination\">\n\n                <button className='pagination__prev'\n                    onClick={() => changePage(page - 1)}\n                    disabled={page === 1}\n                >\n                    {page === 1 ? <TiMinus color='gray' /> :\n                        <FaChevronLeft />\n\n                    }\n\n                </button>\n\n                {middlePagination}\n\n\n                <button className='pagination__next'\n                    onClick={() => changePage(page + 1)}\n                    disabled={page === pages}\n                >\n                    {page === pages ? <TiMinus color='gray' /> :\n                        <FaChevronRight />\n\n                    }\n                </button>\n\n            </div>\n\n        )\n\n    );\n}\n\nexport default Pagination","\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport SkeletonStory from \"../../Skeletons/SkeletonStory\";\nimport CardStory from \"./CardStory\";\nimport NoStories from \"./NoStories\";\nimport Pagination from \"./Pagination\";\nimport \"./Stories.css\"\n\nimport { useNavigate } from \"react-router-dom\"\nimport api from \"../../../util/api\";\nimport { Helmet } from 'react-helmet';\nconst Stories = () => {\n\n  const search = useLocation().search\n  const searchKey = new URLSearchParams(search).get('search')\n  const [stories, setStories] = useState([])\n  const [loading, setLoading] = useState(true)\n  const navigate = useNavigate()\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState(1);\n\n\n  useEffect(() => {\n    const getStories = async () => {\n\n      setLoading(true)\n      try {\n\n        const { data } = await api.get(`/story/getAllStories?search=${searchKey || \"\"}&page=${page}&limit=15`)\n\n        if (searchKey) {\n          navigate({\n            pathname: '/blogs',\n            search: `?search=${searchKey}${page > 1 ? `&page=${page}` : \"\"}`,\n          });\n        }\n        else {\n          navigate({\n            pathname: '/blogs',\n            search: `${page > 1 ? `page=${page}` : \"\"}`,\n          });\n\n\n        }\n        setStories(data.data)\n        setPages(data.pages)\n\n        setLoading(false)\n      }\n      catch (error) {\n        setLoading(true)\n      }\n    }\n    getStories()\n  }, [setLoading, search, page, navigate])\n\n\n  useEffect(() => {\n    setPage(1)\n  }, [searchKey])\n\n\n  return (\n    <div className=\"max-w-[1640px] mx-auto\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>AI Teachers | Blogs</title>\n      </Helmet>\n      {loading ?\n\n        <div className=\"skeleton_emp\">\n          {\n            [...Array(6)].map(() => {\n              return (\n                // theme dark :> default : light\n                <SkeletonStory key={uuidv4()} />\n              )\n            })}\n        </div>\n\n        :\n        <div className=\"mx-3 md:mx-32\">\n          <div className=\"\">\n            <h1 className='mb-4 text-4xl tracking-tight font-extrabold text-center text-primary'>\n              Blogs\n            </h1>\n\n            <p className=' text-secondary hidden md:block text-sm md:text-lg text-justify'>\n              Welcome to the Teach Assist AI Blog, your go-to online resource for staying informed about the latest platform updates, helpful tips and tricks, and intriguing insights. As educator, we understand the importance of continuous learning and staying up to date with the latest trends in education technology. Our blog is designed to provide you with valuable resources, inspiration, and practical knowledge to enhance your teaching experience with AI teachers from Teach Assist AI. Whether you're seeking innovative ideas for lesson planning, strategies to promote student engagement with AI teachers, or guidance on utilizing AI in the classroom, our blog is here to support and inspire you on your educational journey. Stay connected, explore our articles, and discover how Teach Assist AI can transform your teaching practice.\n            </p>\n          </div>\n          <div className=\"story-card-wrapper\">\n            {stories.length !== 0 ?\n              stories?.map((story) => {\n                return (\n                  <CardStory key={uuidv4()} story={story} />\n                )\n              }) : <NoStories />\n            }\n            {/* <img className=\"bg-planet-svg\" src=\"planet.svg\" alt=\"planet\" />\n            <img className=\"bg-planet2-svg\" src=\"planet2.svg\" alt=\"planet\" />\n            <img className=\"bg-planet3-svg\" src=\"planet3.svg\" alt=\"planet\" /> */}\n\n          </div>\n\n          <Pagination page={page} pages={pages} changePage={setPage} />\n\n        </div>\n\n      }\n      <br />\n    </div>\n\n  )\n\n};\n\nexport default Stories;"],"names":["_jsx","className","children","_ref","type","classes","concat","themeClass","theme","_jsxs","SkeletonElement","Shimmer","story","truncateString","str","limit","length","slice","Link","to","slug","src","backend_resourse","image","alt","title","dangerouslySetInnerHTML","__html","content","createdAt","d","Date","getDate","getMonth","getFullYear","editDate","middlePagination","page","pages","changePage","numberRange","start","end","Array","fill","map","i","_toConsumableArray","__","index","onClick","disabled","startValue","Math","floor","_Fragment","amountLeft","style","display","TiMinus","color","FaChevronLeft","FaChevronRight","search","useLocation","searchKey","URLSearchParams","get","_useState","useState","_useState2","_slicedToArray","stories","setStories","_useState3","_useState4","loading","setLoading","navigate","useNavigate","_useState5","_useState6","setPage","_useState7","_useState8","setPages","useEffect","getStories","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$api$get","data","wrap","_context","prev","next","api","sent","pathname","t0","stop","apply","arguments","Helmet","charSet","SkeletonStory","uuidv4","CardStory","NoStories","Pagination"],"sourceRoot":""}