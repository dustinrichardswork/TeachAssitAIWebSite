{"version":3,"file":"static/js/928.8071fb63.chunk.js","mappings":"qNA4IA,UAhIsB,WAGlB,IAAMA,GAAWC,EAAAA,EAAAA,MAETC,GAAUC,EAAAA,EAAAA,MAAVD,MAIRE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA8CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAEpCG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,GAAnBN,EAAEO,mBAEEnB,EAAYoB,OAAS,GAAC,CAAAJ,EAAAE,KAAA,QAE+B,OAArDG,EAAAA,EAAAA,IAAM,gDAA+CL,EAAAM,OAAA,oBAGrDtB,IAAgBI,EAAe,CAAAY,EAAAE,KAAA,QAEA,OAA/BG,EAAAA,EAAAA,IAAM,0BAAyBL,EAAAM,OAAA,iBAOnC,OAHMT,EAAW,IAAIU,UACZC,IAAI,WAAYxB,GACzBa,EAASW,IAAI,kBAAmBpB,GAChCY,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAG2BO,EAAAA,EAAIC,IAAI,mBAADC,OAAoBjC,GAASmB,GAAU,KAAD,GAAAC,EAAAE,EAAAY,KAAxDd,EAAJe,MACRR,EAAAA,EAAAA,IAAM,oBACNS,YAAW,WACPtC,EAAS,SACb,GAAG,KAAMwB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,UAETgB,QAAQC,IAAI,UAASjB,EAAAe,KACrBV,EAAAA,EAAAA,IAAM,2BACNS,YAAW,WACPtC,EAAS,SACb,GAAG,KAAM,yBAAAwB,EAAAkB,OAAA,GAAAvB,EAAA,oBAEhB,gBAhCiBwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,KA6ClB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAIIF,EAAAA,EAAAA,KAAA,QAAMG,MAAM,gCAA+BD,UAGvCF,EAAAA,EAAAA,KAAA,OAAKG,MAAM,uDAAsDD,UAQ7DE,EAAAA,EAAAA,MAAA,OAAKD,MAAM,yBAAwBD,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,sDAAqDH,SAAC,oBAGpEE,EAAAA,EAAAA,MAAA,OAAKD,MAAM,kCAAiCD,SAAA,EAGxCF,EAAAA,EAAAA,KAAA,QAAMM,SAAUtC,EAAakC,UAEzBE,EAAAA,EAAAA,MAAA,OAAKD,MAAM,6BAA4BD,SAAA,EAEnCF,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACNC,WAAS,EACTC,MAAM,eACNC,KAAK,WACLC,KAAK,cACLC,MAAOlD,EACPmD,SAAU,SAACvC,GAAC,OAAKX,EAAeW,EAAEwC,OAAOF,MAAM,EAC/CG,UAAQ,KAEZf,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACNC,WAAS,EACTC,MAAM,uBACNC,KAAK,WACLC,KAAK,kBACLC,MAAO9C,EACP+C,SAAU,SAACvC,GAAC,OAAKP,EAAmBO,EAAEwC,OAAOF,MAAM,EACnDG,UAAQ,KAIZf,EAAAA,EAAAA,KAAA,OAAKG,MAAM,mCAAkCD,UAEzCF,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASP,MAAM,yEAAwED,SAAC,mBAQjHF,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,UAAUd,MAAM,wCAAuCD,SAAC,uDAY7F,C","sources":["components/Password/ResetPassword.jsx"],"sourcesContent":["import TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport api from '../../util/api';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { resetPassword, clearErrors } from '../../actions/userAction';\n// import { useSnackbar } from 'notistack';\n// import BackdropLoader from '../Layouts/BackdropLoader';\n// import MetaData from '../Layouts/MetaData';\n// import FormSidebar from './FormSidebar';\n\nconst ResetPassword = () => {\n\n    //   const dispatch = useDispatch();\n    const navigate = useNavigate();\n    //   const { enqueueSnackbar } = useSnackbar();\n    const { token } = useParams();\n\n    //   const { error, success, loading } = useSelector((state) => state.forgotPassword);\n\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (newPassword.length < 8) {\n            // enqueueSnackbar(\"Password length must be atleast 8 characters\", { variant: \"warning\" });\n            toast(\"Password length must be atleast 8 characters\")\n            return;\n        }\n        if (newPassword !== confirmPassword) {\n            //   enqueueSnackbar(\"Password Doesn't Match\", { variant: \"error\" });\n            toast(\"Password Doesn't Match\")\n            return;\n        }\n\n        const formData = new FormData();\n        formData.set(\"password\", newPassword);\n        formData.set(\"confirmPassword\", confirmPassword);\n        // dispatch(resetPassword(params.token, formData));\n\n        try {\n            const { data } = await api.put(`/password/reset/${token}`, formData);\n            toast('Password Reseted')\n            setTimeout(() => {\n                navigate(\"/login\")\n            }, 2000);\n        } catch (error) {\n            console.log('Error: ', error);\n            toast(\"Password Didn't reseted\")\n            setTimeout(() => {\n                navigate(\"/login\")\n            }, 2000);\n        }\n    }\n\n    // useEffect(() => {\n    //     if (error) {\n    //         enqueueSnackbar(error, { variant: \"error\" });\n    //         dispatch(clearErrors());\n    //     }\n    //     if (success) {\n    //         enqueueSnackbar(\"Password Updated Successfully\", { variant: \"success\" });\n    //         navigate(\"/login\")\n    //     }\n    // }, [dispatch, error, success, navigate, enqueueSnackbar]);\n\n    return (\n        <>\n            {/* <MetaData title=\"Password Reset | Flipkart\" /> */}\n\n            {/* {loading && <BackdropLoader />} */}\n            <main class=\"w-full mt-12 sm:pt-20 sm:mt-0\">\n\n                {/* <!-- row --> */}\n                <div class=\"flex sm:w-4/6 sm:mt-4 m-auto mb-7 bg-white shadow-lg\">\n\n                    {/* <FormSidebar\n                        title=\"Reset Password\"\n                        tag=\"Get access to your Orders, Wishlist and Recommendations\"\n                    /> */}\n\n                    {/* <!-- login column --> */}\n                    <div class=\"flex-1 overflow-hidden\">\n                        <h2 className=\"text-center text-2xl font-medium mt-6 text-gray-800\">Reset Password</h2>\n\n                        {/* <!-- edit info container --> */}\n                        <div class=\"text-center py-10 px-4 sm:px-14\">\n\n                            {/* <!-- input container --> */}\n                            <form onSubmit={handleSubmit}>\n\n                                <div class=\"flex flex-col w-full gap-4\">\n\n                                    <TextField\n                                        fullWidth\n                                        label=\"New Password\"\n                                        type=\"password\"\n                                        name=\"newPassword\"\n                                        value={newPassword}\n                                        onChange={(e) => setNewPassword(e.target.value)}\n                                        required\n                                    />\n                                    <TextField\n                                        fullWidth\n                                        label=\"Confirm New Password\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        value={confirmPassword}\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                        required\n                                    />\n\n                                    {/* <!-- button container --> */}\n                                    <div class=\"flex flex-col gap-2.5 mt-2 mb-32\">\n                                        {/* <p class=\"text-xs text-primary-grey text-left\">By continuing, you agree to Flipkart's <a href=\"https://www.flipkart.com/pages/terms\" class=\"text-primary-blue\"> Terms of Use</a> and <a href=\"https://www.flipkart.com/pages/privacypolicy\" class=\"text-primary-blue\"> Privacy Policy.</a></p> */}\n                                        <button type=\"submit\" class=\"py-3 w-full bg-[#ed7742] shadow hover:shadow-lg rounded-sm font-medium\">Submit</button>\n                                    </div>\n                                    {/* <!-- button container --> */}\n\n                                </div>\n                            </form>\n                            {/* <!-- input container --> */}\n\n                            <Link to=\"/signup\" class=\"font-medium text-sm text-primary-blue\">New to TeachAssistAI? Create an account</Link>\n                        </div>\n                        {/* <!-- edit info container --> */}\n\n                    </div>\n                    {/* <!-- login column --> */}\n                </div>\n                {/* <!-- row --> */}\n\n            </main>\n        </>\n    );\n};\n\nexport default ResetPassword;\n"],"names":["navigate","useNavigate","token","useParams","_useState","useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","_yield$api$put","wrap","_context","prev","next","preventDefault","length","toast","abrupt","FormData","set","api","put","concat","sent","data","setTimeout","t0","console","log","stop","_x","apply","arguments","_jsx","_Fragment","children","class","_jsxs","className","onSubmit","TextField","fullWidth","label","type","name","value","onChange","target","required","Link","to"],"sourceRoot":""}